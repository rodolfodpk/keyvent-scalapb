syntax = "proto2";

package keyvent;

import "scalapb/scalapb.proto";
import "keyvent/core.proto";

option (scalapb.options) = {
    import: "mappers.TypeMappers._"
    import: "scala.collection.JavaConversions._"
    // All classes that extend a sealed trait need to be in the same Scala
    // file, so we set single_file to true.
    single_file: true
};

message CreateCustomer {
    option (scalapb.message).extends = "keyvent.core.Command";
    required CommandId commandId = 1;
    optional EntityId entityId =2;
    optional string foo = 3;
}

message ActivateCustomer {
    option (scalapb.message).extends = "keyvent.core.Command";
    required CommandId commandId = 1;
    optional EntityId entityId =2;
    optional string bar = 3;
}

message CustomerCreated {
    option (scalapb.message).extends = "keyvent.core.Event";
    required EntityId entityId =1;
}

message CustomerActivated {
    option (scalapb.message).extends = "keyvent.core.Event";
    required EntityId entityId =1;
    optional string bar = 2;
}

// services

service CustomerCommands {
    rpc Create (CreateCustomer) returns (CommandReply) {}
    rpc Activate (ActivateCustomer) returns (CommandReply) {}
}

message CommandReply {
    optional string message = 1; // should be a Try.of instead
}
